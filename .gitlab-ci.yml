build_rocky:
  stage: build
  image: quay.io/rockylinux/rockylinux:8
  before_script:
    - echo -e "section_start:$(date +%s):dnf[collapsed=true]\r\e[0KInstalling dependencies"
    - dnf -y install dnf-plugins-core epel-release
    - dnf config-manager --set-enabled powertools
    - dnf -y install meson ninja-build gcc-gfortran netcdf-fortran-devel
    - echo -e "section_end:$(date +%s):dnf\r\e[0K"
  script:
    - meson setup build rtm
    - meson compile -C build/

format:
  stage: test
  image: python:3.9-slim
  needs: []
  cache:
    paths:
      - .cache/pip
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --progress-bar=off black
  script:
    - black --check .

lint:
  stage: test
  image: python:3.9-slim
  needs: []
  cache:
    paths:
      - .cache/pip
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --progress-bar=off flake8 pycodestyle pydocstyle
  script:
    - flake8 --count .
    - pycodestyle -v .
    - pydocstyle -v .

mypy:
  stage: test
  image: python:3.9-slim
  needs: []
  cache:
    paths:
      - .cache/pip
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  before_script:
    - pip install --upgrade pip
    - pip install --progress-bar=off lxml mypy
  script:
    - >
      mypy --ignore-missing-imports --strict --pretty --show-error-context
      --junit-xml mypy.junit.xml
      --cobertura-xml-report .
      --lineprecision-report .
      ./
  artifacts:
    paths:
      - mypy.junit.xml
      - cobertura.xml
      - lineprecision.txt
    reports:
      junit: mypy.junit.xml
      cobertura: cobertura.xml
